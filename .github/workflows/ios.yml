name: iOS CI/CD v1

on:
  push:
    branches: [react-native]
  pull_request:
    branches: [react-native]

jobs:
  build:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10.15.3

      - name: Install gpg
        run: brew install gnupg

      - name: Switch XCode Version
        run: sudo xcode-select -s /Applications/Xcode_11.2.app

      - name: Pre-checks - Env is QA or PROD
        if:
          contains('
            refs/heads/staging
            refs/heads/production
          ', github.ref)
        run: |
          echo "IS_VALID_ENV=true" >> $GITHUB_ENV
          echo "SECRET_NAME=${GITHUB_REF##*/}_ENV" >> $GITHUB_ENV
          echo "APPCENTER_NAME=GoodDollar/GoodDollar-iOS-${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Pre-checks - Env is DEV or unknown
        if:
          false == contains('
            refs/heads/staging
            refs/heads/production
          ', github.ref)
        run: |
          echo "IS_VALID_ENV=false" >> $GITHUB_ENV
          echo "SECRET_NAME=DEV_ENV" >> $GITHUB_ENV
          echo "APPCENTER_NAME=GoodDollar/GoodDollar-iOS-development" >> $GITHUB_ENV

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-npm-cache-
      - name: Install npm dependencies
        run: |
          npm ci
      - name: Cache Pods dependencies
        uses: actions/cache@v1
        with:
          path: ios/Pods
          key: ${{ runner.OS }}-pods-cache-${{ hashFiles('**/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-pods-cache-
      - name: Install pod dependencies
        run: |
          cd ios
          pod install
        shell: bash
      - name: Setup provisioning profile
        run: ./.github/secrets/decrypt_secrets.sh
        env:
          IOS_PROFILE_KEY: ${{ secrets.IOS_PROFILE_KEY }}
      - name: Generate assets
        run: node ./animationAssets.js
      - name: Prepare env
        run: |
          branch_name="development"
          if [ env.IS_VALID_ENV ]
          then
            branch_name="${GITHUB_REF##*/}"
          fi
          echo "${{ env.SECRET_NAME }}"
          echo "${{ secrets[env.SECRET_NAME] }}" >> .env.$branch_name
      - name: Build app
        run: |
          branch_name="development"
          if [ env.IS_VALID_ENV ]
          then
            branch_name="${GITHUB_REF##*/}"
          fi
          echo "Creating release using env: .env.${branch_name}"
          cd ios && ENVFILE=../.env.$branch_name xcodebuild archive \
            -workspace GoodDollar.xcworkspace \
            -scheme GoodDollar \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/GoodDollar.xcarchive \
            PROVISIONING_PROFILE="b29b41c9-e82a-4aab-96a8-e5d00e55756e" \
            CODE_SIGN_IDENTITY="Apple Distribution: GoodDollar Limited (97K3Q6WTLM)"
      - name: Export app
        run: |
          cd ios && xcodebuild \
            -exportArchive \
            -archivePath $PWD/build/GoodDollar.xcarchive \
            -exportOptionsPlist $PWD/ci.plist \
            -exportPath $PWD/build
      - name: Deploy to App Center
        run: |
          token=${{secrets.APPCENTER_IOS_DEV}}
          if [ env.IS_VALID_ENV ]
          then
            is_prod=${{ contains('refs/heads/production', github.ref) }}
            if [ $is_prod == true ]
            then
              token=${{secrets.APPCENTER_IOS_PROD}}
            else
              token=${{secrets.APPCENTER_IOS_STAGING}}
            fi
          fi
          npm install appcenter-cli@2.3.3
          npx appcenter distribute release --token $token --app "${{ env.APPCENTER_NAME }}" --group "Collaborators" --file "ios/build/GoodDollar.ipa" --release-notes "$(git log -1 --pretty=format:%s)" --debug
