# This is a basic workflow to help you get started with Actions

name: Web CI/CD v1

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  workflow_dispatch:
    inputs:
      release:
        description: 'release type'
        required: true
        default: 'qa'
      targetbranch:
        description: 'target deployment branch'
        required: false
        default: 'staging'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    name: Release
    if: "github.event_name == 'workflow_dispatch'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 10.21.0
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ github.event.inputs.release == 'qa' && 'master' || 'staging' }}
      - name: setup git
        run: |
          git config --local user.email "techadmin@gooddollar.org"
          git config --local user.name "Techadmin"
          npm install -g auto-changelog
      - name: update version qa
        if: "github.event.inputs.release == 'qa'"
        run: |
          npm version preminor -m "chore: release qa version %s [skip ci]"
          git push https://${{ secrets.GIT_AUTH }}@github.com/GoodDollar/GoodDAPP master:${{ github.event.inputs.targetbranch }} --force --follow-tags
          git push https://${{ secrets.GIT_AUTH }}@github.com/GoodDollar/GoodDAPP master --follow-tags

      - name: update version prod
        if: "github.event.inputs.release != 'qa'"
        run: |
          npm version minor -m "chore: release prod version %s [skip ci]"
          git push https://${{ secrets.GIT_AUTH }}@github.com/GoodDollar/GoodDAPP staging:${{ github.event.inputs.targetbranch }} --force --follow-tags
          git checkout master
          git merge staging
          git push https://${{ secrets.GIT_AUTH }}@github.com/GoodDollar/GoodDAPP master --follow-tags

  test:
    name: Unit Tests
    if: "github.event_name != 'workflow_dispatch' && !contains(github.event.head_commit.message,'skip ci')"
    env:
      REACT_ENV: 'development'
      TEST_REACT_NATIVE: false
      BUNDLESIZE_GITHUB_TOKEN: 63f6d1717c6652d63234cf9629977b08f4bac3fd
      MNEMONIC: 'myth like bonus scare over problem client lizard pioneer submit female collect'
      ADMIN_MNEMONIC: 'they bus duty candy uncover assault bullet kitchen kit acid spin physical'
      REACT_APP_ADMIN_MNEMONIC: 'they bus duty candy uncover assault bullet kitchen kit acid spin physical'
      REACT_APP_LOG_LEVEL: 'debug'
      CI: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 10.21.0

      - name: Install npm dependencies
        uses: bahmutov/npm-install@v1

      - uses: actions/cache@v2
        id: contractsCache
        name: cache goodcontracts
        with:
          path: node_modules/@gooddollar/goodcontracts
          key: ${{ hashFiles('node_modules/@gooddollar/goodcontracts/package-lock.json') }}

      - name: install goodcontracts
        if: steps.contractsCache.outputs.cache-hit != 'true'
        run: |
          pushd node_modules/@gooddollar/goodcontracts
          npm ci
          cd stakingModel
          npm ci
          popd

      - name: prepare blockchain for test
        run: |
          pushd node_modules/@gooddollar/goodcontracts/stakingModel
          npm run ganache:test &
          npm run wait
          npm run start:withmain
          popd

      - name: run tests and code coverage
        run: |
          cat node_modules/@gooddollar/goodcontracts/releases/deployment.json
          npm run coverage
          npm run coveralls || true
          pkill -f ganache
