---
format_version: '8'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: react-native
trigger_map:
  - push_branch: "*"
    workflow: tests
workflows:
  deploy:
    description: "## Configure Android part of the deploy workflow\n\nTo generate
        a signed APK:\n\n1. Open the **Workflow** tab of your project on Bitrise.io\n1.
        Add **Sign APK step right after Android Build step**\n1. Click on **Code Signing**
        tab\n1. Find the **ANDROID KEYSTORE FILE** section\n1. Click or drop your file
        on the upload file field\n1. Fill the displayed 3 input fields:\n1. **Keystore
        password**\n1. **Keystore alias**\n1. **Private key password**\n1. Click on
        **[Save metadata]** button\n\nThat's it! From now on, **Sign APK** step will
        receive your uploaded files.\n\n## Configure iOS part of the deploy workflow\n\nTo
        generate IPA:\n\n1. Open the **Workflow** tab of your project on Bitrise.io\n1.
        Click on **Code Signing** tab\n1. Find the **PROVISIONING PROFILE** section\n1.
        Click or drop your file on the upload file field\n1. Find the **CODE SIGNING
        IDENTITY** section\n1. Click or drop your file on the upload file field\n1.
        Click on **Workflows** tab\n1. Select deploy workflow\n1. Select **Xcode Archive
        & Export for iOS** step\n1. Open **Force Build Settings** input group\n1. Specify
        codesign settings\nSet **Force code signing with Development Team**, **Force
        code signing with Code Signing Identity**  \nand **Force code signing with Provisioning
        Profile** inputs regarding to the uploaded codesigning files\n1. Specify manual
        codesign style\nIf the codesigning files, are generated manually on the Apple
        Developer Portal,  \nyou need to explicitly specify to use manual coedsign settings
        \ \n(as ejected rn projects have xcode managed codesigning turned on).  \nTo
        do so, add 'CODE_SIGN_STYLE=\"Manual\"' to 'Additional options for xcodebuild
        call' input\n\n## To run this workflow\n\nIf you want to run this workflow manually:\n\n1.
        Open the app's build list page\n2. Click on **[Start/Schedule a Build]** button\n3.
        Select **deploy** in **Workflow** dropdown input\n4. Click **[Start Build]**
        button\n\nOr if you need this workflow to be started by a GIT event:\n\n1. Click
        on **Triggers** tab\n2. Setup your desired event (push/tag/pull) and select
        **deploy** workflow\n3. Click on **[Done]** and then **[Save]** buttons\n\nThe
        next change in your repository that matches any of your trigger map event will
        start **deploy** workflow.\n"
    steps:
      - activate-ssh-key@4.0.3:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4.0.17: {}
      - script@1.1.5:
          title: Do anything with Script step
      - npm@1.1.0:
          inputs:
            - command: install
      - install-missing-android-tools@2.3.7:
          inputs:
            - gradlew_path: "$PROJECT_LOCATION/gradlew"
      - android-build@0.10.0:
          inputs:
            - project_location: "$PROJECT_LOCATION"
      - certificate-and-profile-installer@1.10.1: {}
      - xcode-archive@2.7.0:
          inputs:
            - project_path: "$BITRISE_PROJECT_PATH"
            - scheme: "$BITRISE_SCHEME"
            - export_method: "$BITRISE_EXPORT_METHOD"
            - configuration: Release
      - deploy-to-bitrise-io@1.9.2: {}
  tests_setup:
    steps:
      - activate-ssh-key@4.0.3:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4.0.17: {}
      - script@1.1.5:
          title: Do anything with Script step
      - npm@1.1.0:
          inputs:
            - command: install
    before_run:
    after_run:
  detox_tests:
    before_run: []
    after_run: []
    steps:
      - npm:
          inputs:
            - command: install -g detox-cli
          title: Install Detox CLI
      - npm:
          inputs:
            - command: install -g react-native-cli
          title: Install React Native CLI
      - assets:
          - inputs:
            - command: npm run animation:assets
          title: Install Assets
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                brew tap facebook/fb
                export CODE_SIGNING_REQUIRED=NO
                brew install fbsimctl
                brew tap wix/brew
                brew install applesimutils --HEAD
          title: Install Detox Utils
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                detox build --configuration ios.sim.debug
          title: Detox - Build Release App
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                detox test --configuration ios.sim.debug --cleanup
          title: Detox - Run E2E Tests iOS
  tests:
    before_run:
      - tests_setup
      - detox_tests
app:
  envs:
    - opts:
        is_expand: false
      PROJECT_LOCATION: android
    - opts:
        is_expand: false
      MODULE: app
    - opts:
        is_expand: false
      VARIANT: debug
    - opts:
        is_expand: false
      BITRISE_PROJECT_PATH: ios/GoodDollar.xcworkspace
    - opts:
        is_expand: false
      BITRISE_SCHEME: GoodDollar
    - opts:
        is_expand: false
      BITRISE_EXPORT_METHOD: ad-hoc
    - opts:
        is_expand: false
      TEST_REACT_NATIVE: 'true'
