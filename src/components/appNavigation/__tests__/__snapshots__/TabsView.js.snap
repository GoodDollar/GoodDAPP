// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TabsView matches snapshot 1`] = `
<div
  className="css-view-1dbjc4n r-paddingBottom-97e31f r-paddingLeft-bv2aro r-paddingRight-hxflta r-paddingTop-10xqauy"
  style={
    Object {
      "backgroundColor": "rgba(98,0,238,1.00)",
      "boxShadow": "0px 3px 4px rgba(0,0,0,0.24)",
      "zIndex": 0,
    }
  }
>
  <div
    className="css-view-1dbjc4n"
    style={
      Object {
        "WebkitAlignItems": "center",
        "WebkitBoxAlign": "center",
        "WebkitBoxDirection": "normal",
        "WebkitBoxOrient": "horizontal",
        "WebkitFlexDirection": "row",
        "alignItems": "center",
        "backgroundColor": "rgba(98,0,238,1.00)",
        "flexDirection": "row",
        "height": "56px",
        "msFlexAlign": "center",
        "msFlexDirection": "row",
        "overflowX": "hidden",
        "overflowY": "hidden",
        "paddingLeft": "4px",
        "paddingRight": "4px",
      }
    }
  >
    <div
      className="css-view-1dbjc4n r-cursor-1loqt21 r-touchAction-1otgn73 r-transitionDuration-eafdt9 r-transitionProperty-1i6wzkk r-userSelect-lrvibr"
      data-focusable={true}
      data-testid="rewards_tab"
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "WebkitAlignItems": "flex-start",
          "WebkitBoxAlign": "start",
          "alignItems": "flex-start",
          "marginLeft": "10px",
          "msFlexAlign": "start",
          "width": "37px",
        }
      }
      tabIndex="0"
    >
      <div
        className="css-text-901oao"
        dir="auto"
        style={
          Object {
            "color": "rgba(255,255,255,1.00)",
            "fontFamily": "gooddollar",
            "fontSize": "36px",
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
      >
        
      </div>
    </div>
    <div
      className="css-view-1dbjc4n r-cursor-1loqt21 r-flex-13awgt0 r-paddingHorizontal-1e081e0 r-touchAction-1otgn73"
      data-focusable={true}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      tabIndex="0"
    >
      <h1
        className="css-reset-4rbku5 css-text-901oao css-textOneLine-bfa6kz r-fontSize-adyw6z"
        dir="auto"
        role="heading"
        style={
          Object {
            "color": "rgba(255,255,255,1.00)",
            "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontWeight": "500",
            "textAlign": "left",
          }
        }
      />
    </div>
    <div
      className="css-view-1dbjc4n r-cursor-1loqt21 r-touchAction-1otgn73 r-transitionDuration-eafdt9 r-transitionProperty-1i6wzkk r-userSelect-lrvibr"
      data-focusable={true}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "WebkitAlignItems": "flex-end",
          "WebkitBoxAlign": "end",
          "alignItems": "flex-end",
          "msFlexAlign": "end",
          "width": "37px",
        }
      }
      tabIndex="0"
    >
      <div
        className="css-text-901oao r-fontSize-adyw6z"
        data-testid="burger_button"
        dir="auto"
        style={
          Object {
            "color": "rgba(255,255,255,1.00)",
            "fontFamily": "gooddollar",
            "fontStyle": "normal",
            "fontWeight": "normal",
            "marginRight": "10px",
          }
        }
      >
        
      </div>
    </div>
  </div>
</div>
`;
